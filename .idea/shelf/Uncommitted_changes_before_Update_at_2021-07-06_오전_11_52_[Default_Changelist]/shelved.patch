Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Add project specific ProGuard rules here.\r\n# You can control the set of applied configuration files using the\r\n# proguardFiles setting in build.gradle.\r\n#\r\n# For more details, see\r\n#   http://developer.android.com/guide/developing/tools/proguard.html\r\n\r\n# If your project uses WebView with JS, uncomment the following\r\n# and specify the fully qualified class name to the JavaScript interface\r\n# class:\r\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n#   public *;\r\n#}\r\n\r\n# Uncomment this to preserve the line number information for\r\n# debugging stack traces.\r\n#-keepattributes SourceFile,LineNumberTable\r\n\r\n# If you keep the line number information, uncomment this to\r\n# hide the original source file name.\r\n#-renamesourcefileattribute SourceFile\r\n\r\n-keep class com.kakao.sdk.**.model.* { <fields>; }\r\n-keep class * extends com.google.gson.TypeAdapter\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision fec0d5f64da4630825e51deb4639c70361b54572)
+++ app/proguard-rules.pro	(date 1625214490070)
@@ -20,5 +20,4 @@
 # hide the original source file name.
 #-renamesourcefileattribute SourceFile
 
--keep class com.kakao.sdk.**.model.* { <fields>; }
 -keep class * extends com.google.gson.TypeAdapter
Index: app/src/main/java/com/cookandroid/scholarshiplike/HomeSearchActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.scholarshiplike\r\n\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.util.Log\r\nimport android.widget.EditText\r\nimport android.widget.ImageView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.viewpager2.widget.ViewPager2\r\nimport com.google.android.material.tabs.TabLayout\r\nimport com.google.android.material.tabs.TabLayoutMediator\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport kotlinx.android.synthetic.main.activity_home_search.*\r\n\r\n\r\nclass HomeSearchActivity : AppCompatActivity() {\r\n\r\n    lateinit var searchBar: EditText            // 검색창\r\n    lateinit var searchGoBtn : ImageView        // 찾기 버튼\r\n    lateinit var resultList : RecyclerView      // 검색 결과\r\n    lateinit var search_tabLayout : TabLayout   // 검색 결과 탭 - 장학금, 매거진\r\n    lateinit var searchMagazinFrag: HomeSearchMagazineFragment\r\n    lateinit var searchScholarFrag: HomeSearchScholarshipFragment\r\n\r\n\r\n    // 검색결과 탭\r\n    private var tabLayoutTextArray: ArrayList<String> = arrayListOf(\"장학금\", \"매거진\")\r\n    lateinit var viewAdapter: ViewPageAdapter\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_home_search)\r\n\r\n        searchBar = findViewById<EditText>(R.id.searchBar)                  // 검색창\r\n        searchGoBtn = findViewById<ImageView>(R.id.searchGoBtn)             // 찾기 버튼\r\n        search_tabLayout = findViewById<TabLayout>(R.id.search_tabLayout)   // 검색 결과 탭\r\n        //resultList = findViewById<RecyclerView>(R.id.toolbar)             // 검색 결과\r\n        searchMagazinFrag = HomeSearchMagazineFragment()\r\n        searchScholarFrag = HomeSearchScholarshipFragment()\r\n\r\n        // 어댑터 생성, 연결\r\n        viewAdapter = ViewPageAdapter(this)\r\n        viewAdapter.addFragment(HomeSearchScholarshipFragment())\r\n        viewAdapter.addFragment(HomeSearchMagazineFragment())\r\n        search_viewpager.adapter = viewAdapter\r\n\r\n        search_viewpager.registerOnPageChangeCallback(object: ViewPager2.OnPageChangeCallback(){\r\n            override fun onPageSelected(position: Int) {\r\n                super.onPageSelected(position)\r\n                Log.e(\"page num\", \"page ${position+1}\")\r\n            }\r\n        })\r\n\r\n\r\n        // 탭 레이아웃 이름 연결\r\n        TabLayoutMediator(search_tabLayout, search_viewpager) { tab, position ->\r\n            tab.text = tabLayoutTextArray[position]\r\n        }.attach()\r\n\r\n        searchBar.addTextChangedListener(object: TextWatcher{\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\r\n            }\r\n\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\r\n            }\r\n\r\n            override fun afterTextChanged(s: Editable?) {\r\n                Log.w(\"TextWatcher\", s.toString())\r\n                searchMagazinFrag.update(s.toString())\r\n                searchScholarFrag.update(s.toString())\r\n\r\n                viewAdapter.notifyDataSetChanged()\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/scholarshiplike/HomeSearchActivity.kt	(revision fec0d5f64da4630825e51deb4639c70361b54572)
+++ app/src/main/java/com/cookandroid/scholarshiplike/HomeSearchActivity.kt	(date 1625210267285)
@@ -11,8 +11,6 @@
 import androidx.viewpager2.widget.ViewPager2
 import com.google.android.material.tabs.TabLayout
 import com.google.android.material.tabs.TabLayoutMediator
-import com.google.firebase.firestore.ktx.firestore
-import com.google.firebase.ktx.Firebase
 import kotlinx.android.synthetic.main.activity_home_search.*
 
 
@@ -51,7 +49,19 @@
         search_viewpager.registerOnPageChangeCallback(object: ViewPager2.OnPageChangeCallback(){
             override fun onPageSelected(position: Int) {
                 super.onPageSelected(position)
-                Log.e("page num", "page ${position+1}")
+                viewAdapter.notifyDataSetChanged()
+            }
+
+            override fun onPageScrolled(
+                position: Int,
+                positionOffset: Float,
+                positionOffsetPixels: Int
+            ) {
+                super.onPageScrolled(position, positionOffset, positionOffsetPixels)
+            }
+
+            override fun onPageScrollStateChanged(state: Int) {
+                super.onPageScrollStateChanged(state)
             }
         })
 
@@ -72,8 +82,6 @@
                 Log.w("TextWatcher", s.toString())
                 searchMagazinFrag.update(s.toString())
                 searchScholarFrag.update(s.toString())
-
-                viewAdapter.notifyDataSetChanged()
             }
         })
     }
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    ext.kotlin_version = '1.3.50'\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.6.3'\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n        classpath 'com.google.gms:google-services:4.3.8'\r\n        classpath 'com.google.firebase:perf-plugin:1.4.0'\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'https://jitpack.io' }\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision fec0d5f64da4630825e51deb4639c70361b54572)
+++ build.gradle	(date 1625215685158)
@@ -1,3 +1,4 @@
+
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 
 buildscript {
Index: app/src/main/java/com/cookandroid/scholarshiplike/HomeSearchMagazineFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.scholarshiplike\r\n\r\nimport android.content.Context\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.firestore.FirebaseFirestoreException\r\nimport com.google.firebase.firestore.QuerySnapshot\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.firestore.ktx.firestoreSettings\r\nimport com.google.firebase.ktx.Firebase\r\nimport kotlinx.android.synthetic.main.fragment_recycler.*\r\n\r\n\r\nclass HomeSearchMagazineFragment : Fragment() {\r\n\r\n\r\n    private lateinit var listAdapter: MagazineRecyclerViewAdapter\r\n\r\n    private var  dataList: ArrayList<Post> = arrayListOf()\r\n    private var searchDataList: ArrayList<Post> = arrayListOf()\r\n    lateinit var mContext : Context\r\n    lateinit var searchData: String\r\n    private var db = Firebase.firestore\r\n    private val sRef = db.collection(\"장학라이크\")\r\n        .document(\"매거진\").collection(\"전체\")\r\n\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n        mContext = context\r\n    }\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\r\n\r\n        sRef // 작업할 문서\r\n            .get()      // 문서 가져오기\r\n            .addOnSuccessListener { result ->\r\n                for (document in result) {  // 가져온 문서들은 result에 들어감\r\n                    val item = Post(document.id,\".\",\".\")\r\n                    searchDataList.add(item)\r\n                    Log.w(\"DataList\", searchDataList.toString())\r\n                }\r\n                Log.w(\"load firebase data\", \"Success\")\r\n\r\n            }\r\n            .addOnFailureListener { exception ->\r\n                // 실패할 경우\r\n                Log.w(\"MainActivity\", \"Error getting documents: $exception\")\r\n            }\r\n\r\n        return inflater.inflate(com.cookandroid.scholarshiplike.R.layout.fragment_recycler, container, false)\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        // Fragment에서 전달받은 list를 넘기면서 ListAdapter 생성\r\n\r\n        listAdapter = MagazineRecyclerViewAdapter(searchDataList,mContext)\r\n        listAdapter.submitList(searchDataList)\r\n        listView.layoutManager = LinearLayoutManager(activity, RecyclerView.VERTICAL, false)\r\n        // RecyclerView.adapter에 지정\r\n        listView.adapter = listAdapter\r\n    }\r\n\r\n\r\n    fun update(s: String){\r\n        sRef.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n            // ArrayList 비워줌\r\n            searchData = s\r\n            searchDataList.clear()\r\n\r\n            for (snapshot in querySnapshot!!.documents) {\r\n                if (snapshot.getString(\"title\")!!.contains(searchData)) {\r\n                    var item = snapshot.toObject(Post::class.java)\r\n                    searchDataList.add(item!!)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/scholarshiplike/HomeSearchMagazineFragment.kt	(revision fec0d5f64da4630825e51deb4639c70361b54572)
+++ app/src/main/java/com/cookandroid/scholarshiplike/HomeSearchMagazineFragment.kt	(date 1625221233096)
@@ -1,5 +1,6 @@
 package com.cookandroid.scholarshiplike
 
+import android.app.Activity
 import android.content.Context
 import android.os.Bundle
 import android.util.Log
@@ -9,58 +10,36 @@
 import androidx.fragment.app.Fragment
 import androidx.recyclerview.widget.LinearLayoutManager
 import androidx.recyclerview.widget.RecyclerView
-import com.google.firebase.firestore.FirebaseFirestoreException
-import com.google.firebase.firestore.QuerySnapshot
 import com.google.firebase.firestore.ktx.firestore
-import com.google.firebase.firestore.ktx.firestoreSettings
 import com.google.firebase.ktx.Firebase
 import kotlinx.android.synthetic.main.fragment_recycler.*
 
 
 class HomeSearchMagazineFragment : Fragment() {
 
-
-    private lateinit var listAdapter: MagazineRecyclerViewAdapter
-
     private var  dataList: ArrayList<Post> = arrayListOf()
     private var searchDataList: ArrayList<Post> = arrayListOf()
-    lateinit var mContext : Context
-    lateinit var searchData: String
-    private var db = Firebase.firestore
-    private val sRef = db.collection("장학라이크")
-        .document("매거진").collection("전체")
+    private lateinit var listAdapter: MagazineRecyclerViewAdapter
+    private lateinit var mContext : Context
+    private val db = Firebase.firestore
+    private val sRef = db.collection("장학금")
+        .document("교내").collection("강원")
+        .document("강원대").collection("학과")
 
     override fun onAttach(context: Context) {
         super.onAttach(context)
-        mContext = context
+        mContext = context as Activity
     }
 
     override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
-
-        sRef // 작업할 문서
-            .get()      // 문서 가져오기
-            .addOnSuccessListener { result ->
-                for (document in result) {  // 가져온 문서들은 result에 들어감
-                    val item = Post(document.id,".",".")
-                    searchDataList.add(item)
-                    Log.w("DataList", searchDataList.toString())
-                }
-                Log.w("load firebase data", "Success")
-
-            }
-            .addOnFailureListener { exception ->
-                // 실패할 경우
-                Log.w("MainActivity", "Error getting documents: $exception")
-            }
-
-        return inflater.inflate(com.cookandroid.scholarshiplike.R.layout.fragment_recycler, container, false)
+        return inflater.inflate(R.layout.fragment_recycler, container, false)
     }
 
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
         // Fragment에서 전달받은 list를 넘기면서 ListAdapter 생성
 
-        listAdapter = MagazineRecyclerViewAdapter(searchDataList,mContext)
+        listAdapter = MagazineRecyclerViewAdapter(searchDataList, mContext)
         listAdapter.submitList(searchDataList)
         listView.layoutManager = LinearLayoutManager(activity, RecyclerView.VERTICAL, false)
         // RecyclerView.adapter에 지정
@@ -69,18 +48,33 @@
 
 
     fun update(s: String){
-        sRef.addSnapshotListener { querySnapshot, firebaseFirestoreException ->
-            // ArrayList 비워줌
-            searchData = s
-            searchDataList.clear()
+        sRef // 작업할 문서
+            .get()      // 문서 가져오기
+            .addOnSuccessListener { result ->
+                dataList.clear()
+                for (document in result) {  // 가져온 문서들은 result에 들어감
+                    val item = Post(document.id,".",".")
+                    dataList.add(item)
+                }
+                Log.w("load firebase data", "Success")
+
+            }
+            .addOnFailureListener { exception ->
+                // 실패할 경우
+                Log.w("MainActivity", "Error getting documents: $exception")
+            }
+
+        searchDataList.clear()
 
-            for (snapshot in querySnapshot!!.documents) {
-                if (snapshot.getString("title")!!.contains(searchData)) {
-                    var item = snapshot.toObject(Post::class.java)
-                    searchDataList.add(item!!)
-                }
+        for (item in dataList) {
+            if (item.title.contains(s)) {
+                searchDataList.add(item)
+
             }
         }
-    }
+        Log.w("Data input", searchDataList.toString())
 
+        if(::listAdapter.isInitialized)
+            listAdapter.notifyDataSetChanged()
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/cookandroid/scholarshiplike/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.scholarshiplike\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.SharedPreferences\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.KeyEvent\r\nimport android.view.inputmethod.InputMethodManager\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\r\nimport com.google.android.gms.common.api.ApiException\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.auth.FirebaseUser\r\nimport com.google.firebase.auth.GoogleAuthProvider\r\nimport kotlinx.android.synthetic.main.activity_login.*\r\n\r\nclass LoginActivity :AppCompatActivity(){\r\n    private lateinit var googleSignInClient: GoogleSignInClient\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n    private val RC_SIGN_IN = 99\r\n    private val TAG = \"LoginActivity\"\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_login)\r\n\r\n        // Google 로그인 옵션 구성 (requestIdToken, Email 요청)\r\n        val gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n            .requestIdToken(getString(R.string.default_web_client_id))\r\n            .requestEmail()\r\n            .build()\r\n\r\n        googleSignInClient = GoogleSignIn.getClient(this, gso)\r\n        firebaseAuth = FirebaseAuth.getInstance()   // firebase auth 객체\r\n\r\n        // 버튼 클릭을 통합 처리\r\n        btnClick()\r\n    }\r\n\r\n    // 버튼 클릭 통합 처리\r\n    private fun btnClick() {\r\n        // 로그인 버튼 클릭 시\r\n        btn_login.setOnClickListener() {\r\n            var txtEmail : String = login_txt_email.text.toString()\r\n            var txtPassword : String = login_txt_password.text.toString()\r\n\r\n            if (!txtEmail.isEmpty() && !txtPassword.isEmpty()) {\r\n                FirebaseAuth.getInstance().signInWithEmailAndPassword(txtEmail, txtPassword)\r\n                    .addOnCompleteListener(this) { task ->\r\n                        if(task.isSuccessful) {\r\n                            Toast.makeText(this, \"로그인 성공\", Toast.LENGTH_LONG).show()\r\n                            var iT = Intent(this, MainActivity::class.java)\r\n                            startActivity(iT)\r\n                        }\r\n                        else {\r\n                            Toast.makeText(this, task.exception.toString(), Toast.LENGTH_LONG).show()\r\n                        }\r\n                    }\r\n            }\r\n            else if (txtEmail.isEmpty()){\r\n                Toast.makeText(this, \"이메일을 입력하세요\", Toast.LENGTH_SHORT).show()\r\n            }\r\n            else if (txtPassword.isEmpty()) {\r\n                Toast.makeText(this, \"비밀번호를 입력하세요\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n        // 비밀번호 찾기 클릭 시\r\n        goto_findPw.setOnClickListener {\r\n            var iT = Intent(this, LoginPasswordResetActivity::class.java)\r\n            startActivity(iT)\r\n        }\r\n\r\n        // 회원가입 클릭 시\r\n        goto_signup.setOnClickListener {\r\n            var iT = Intent(this, SignupActivity::class.java)\r\n            startActivity(iT)\r\n        }\r\n\r\n        //구글 로그인\r\n        login_google.setOnClickListener {\r\n            signIn()    // 구글 로그인\r\n        }\r\n\r\n        //엔터 입력 시 키보드 내리기\r\n        login_txt_password.setOnKeyListener { v, keyCode, event ->\r\n            //Enter key Action\r\n            if (event.action == KeyEvent.ACTION_DOWN && keyCode == KeyEvent.KEYCODE_ENTER) {\r\n                val imm: InputMethodManager =\r\n                    getSystemService(INPUT_METHOD_SERVICE) as InputMethodManager\r\n                imm.hideSoftInputFromWindow(login_txt_password.getWindowToken(), 0) //hide keyboard\r\n                true\r\n            } else false\r\n        }\r\n    }\r\n\r\n    // Google 로그인\r\n    private fun signIn() {\r\n        val signInIntent = googleSignInClient.signInIntent\r\n        startActivityForResult(signInIntent, RC_SIGN_IN)\r\n    }\r\n\r\n    // 활동 초기화 시 유저가 앱에 이미 구글 로그인을 했는지 확인\r\n    override fun onStart() {\r\n        super.onStart()\r\n        val account = GoogleSignIn.getLastSignedInAccount(this)\r\n        if(account!=null){ // 이미 로그인 되어있을시 바로 메인 액티비티로 이동\r\n            toMainActivity(firebaseAuth.currentUser)\r\n        }\r\n    }\r\n\r\n    // MainActivity로 이동\r\n    fun toMainActivity(user: FirebaseUser?) {\r\n        if(user !=null) { // MainActivity 로 이동\r\n            startActivity(Intent(this, MainActivity::class.java))\r\n            finish()\r\n        }\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n\r\n        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);\r\n        if (requestCode == RC_SIGN_IN) {\r\n            val task = GoogleSignIn.getSignedInAccountFromIntent(data)\r\n            try {\r\n                // Google Sign In was successful, authenticate with Firebase\r\n                val account = task.getResult(ApiException::class.java)!!\r\n                Log.d(TAG, \"firebaseAuthWithGoogle:\" + account.id)\r\n                firebaseAuthWithGoogle(account!!)\r\n            } catch (e: ApiException) {\r\n                // Google Sign In failed, update UI appropriately\r\n                Log.w(TAG, \"Google sign in failed\", e)\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun firebaseAuthWithGoogle(acct: GoogleSignInAccount) {\r\n        Log.d(\"LoginActivity\", \"firebaseAuthWithGoogle:\" + acct.id!!)\r\n\r\n        //Google SignInAccount 객체에서 ID 토큰을 가져와서 Firebase Auth로 교환하고 Firebase에 인증\r\n        val credential = GoogleAuthProvider.getCredential(acct.idToken, null)\r\n        firebaseAuth.signInWithCredential(credential)\r\n            .addOnCompleteListener(this) { task ->\r\n                if (task.isSuccessful) {\r\n                    Log.w(TAG, \"firebaseAuthWithGoogle 성공\", task.exception)\r\n                    toMainActivity(firebaseAuth?.currentUser)\r\n                } else {\r\n                    Log.w(TAG, \"firebaseAuthWithGoogle 실패\", task.exception)\r\n                    Toast.makeText(this, \"로그인에 실패하였습니다.\", Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/scholarshiplike/LoginActivity.kt	(revision fec0d5f64da4630825e51deb4639c70361b54572)
+++ app/src/main/java/com/cookandroid/scholarshiplike/LoginActivity.kt	(date 1625200784402)
@@ -1,8 +1,6 @@
 package com.cookandroid.scholarshiplike
 
-import android.content.Context
 import android.content.Intent
-import android.content.SharedPreferences
 import android.os.Bundle
 import android.util.Log
 import android.view.KeyEvent
@@ -46,15 +44,15 @@
     private fun btnClick() {
         // 로그인 버튼 클릭 시
         btn_login.setOnClickListener() {
-            var txtEmail : String = login_txt_email.text.toString()
-            var txtPassword : String = login_txt_password.text.toString()
+            val txtEmail : String = login_txt_email.text.toString()
+            val txtPassword : String = login_txt_password.text.toString()
 
-            if (!txtEmail.isEmpty() && !txtPassword.isEmpty()) {
+            if (txtEmail.isNotEmpty() && txtPassword.isNotEmpty()) {
                 FirebaseAuth.getInstance().signInWithEmailAndPassword(txtEmail, txtPassword)
                     .addOnCompleteListener(this) { task ->
                         if(task.isSuccessful) {
                             Toast.makeText(this, "로그인 성공", Toast.LENGTH_LONG).show()
-                            var iT = Intent(this, MainActivity::class.java)
+                            val iT = Intent(this, MainActivity::class.java)
                             startActivity(iT)
                         }
                         else {
@@ -72,13 +70,13 @@
 
         // 비밀번호 찾기 클릭 시
         goto_findPw.setOnClickListener {
-            var iT = Intent(this, LoginPasswordResetActivity::class.java)
+            val iT = Intent(this, LoginPasswordResetActivity::class.java)
             startActivity(iT)
         }
 
         // 회원가입 클릭 시
         goto_signup.setOnClickListener {
-            var iT = Intent(this, SignupActivity::class.java)
+            val iT = Intent(this, SignupActivity::class.java)
             startActivity(iT)
         }
 
@@ -88,12 +86,12 @@
         }
 
         //엔터 입력 시 키보드 내리기
-        login_txt_password.setOnKeyListener { v, keyCode, event ->
+        login_txt_password.setOnKeyListener { _, keyCode, event ->
             //Enter key Action
             if (event.action == KeyEvent.ACTION_DOWN && keyCode == KeyEvent.KEYCODE_ENTER) {
                 val imm: InputMethodManager =
                     getSystemService(INPUT_METHOD_SERVICE) as InputMethodManager
-                imm.hideSoftInputFromWindow(login_txt_password.getWindowToken(), 0) //hide keyboard
+                imm.hideSoftInputFromWindow(login_txt_password.windowToken, 0) //hide keyboard
                 true
             } else false
         }
@@ -115,7 +113,7 @@
     }
 
     // MainActivity로 이동
-    fun toMainActivity(user: FirebaseUser?) {
+    private fun toMainActivity(user: FirebaseUser?) {
         if(user !=null) { // MainActivity 로 이동
             startActivity(Intent(this, MainActivity::class.java))
             finish()
@@ -132,7 +130,7 @@
                 // Google Sign In was successful, authenticate with Firebase
                 val account = task.getResult(ApiException::class.java)!!
                 Log.d(TAG, "firebaseAuthWithGoogle:" + account.id)
-                firebaseAuthWithGoogle(account!!)
+                firebaseAuthWithGoogle(account)
             } catch (e: ApiException) {
                 // Google Sign In failed, update UI appropriately
                 Log.w(TAG, "Google sign in failed", e)
@@ -149,7 +147,7 @@
             .addOnCompleteListener(this) { task ->
                 if (task.isSuccessful) {
                     Log.w(TAG, "firebaseAuthWithGoogle 성공", task.exception)
-                    toMainActivity(firebaseAuth?.currentUser)
+                    toMainActivity(firebaseAuth.currentUser)
                 } else {
                     Log.w(TAG, "firebaseAuthWithGoogle 실패", task.exception)
                     Toast.makeText(this, "로그인에 실패하였습니다.", Toast.LENGTH_SHORT).show()
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'kotlin-android-extensions'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'kotlin-kapt'\r\napply plugin: 'com.google.firebase.firebase-perf'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"30.0.3\"\r\n    defaultConfig {\r\n        applicationId \"com.cookandroid.scholarshiplike\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"v0.1.0-alpha\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    viewBinding {\r\n        enabled = true\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.core:core-ktx:1.3.2'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    // material design(BottomNavigationView)\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'com.github.denzcoskun:ImageSlideshow:0.0.6'\r\n\r\n    // recyclerview\r\n    implementation \"androidx.recyclerview:recyclerview:1.2.0\"\r\n    implementation \"androidx.recyclerview:recyclerview-selection:1.1.0\"\r\n\r\n    // firestore\r\n    implementation platform('com.google.firebase:firebase-bom:28.1.0')\r\n    implementation 'com.google.firebase:firebase-analytics-ktx'\r\n    implementation 'com.google.firebase:firebase-firestore-ktx'\r\n    implementation 'com.google.firebase:firebase-messaging-ktx'\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    implementation 'com.google.firebase:firebase-perf-ktx'\r\n\r\n    // firebase authentication\r\n    implementation 'com.google.firebase:firebase-auth-ktx'\r\n\r\n    implementation 'com.google.firebase:firebase-database:18.0.1'\r\n    implementation 'com.github.ivbaranov:materiallettericon:0.2.3'\r\n\r\n    // cardview\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n\r\n    // tab\r\n    // noinspection GradleCompatible\r\n\r\n    // Scholarship Tab\r\n    // noinspection GradleCompatible\r\n    implementation 'com.android.support:design: 29.0.0'\r\n\r\n    // adMob\r\n    implementation 'com.google.android.gms:play-services-ads:20.2.0'\r\n\r\n    //noinspection GradleCompatible\r\n    implementation \"com.android.support:support-compat:28.0.0\"\r\n\r\n    // alarm channel\r\n    implementation 'com.kyleduo.switchbutton:library:2.0.0'\r\n\r\n\r\n}\r\n\r\napply plugin: 'com.google.gms.google-services'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision fec0d5f64da4630825e51deb4639c70361b54572)
+++ app/build.gradle	(date 1625215705378)
@@ -70,16 +70,13 @@
     // firebase authentication
     implementation 'com.google.firebase:firebase-auth-ktx'
 
-    implementation 'com.google.firebase:firebase-database:18.0.1'
-    implementation 'com.github.ivbaranov:materiallettericon:0.2.3'
-
     // cardview
     implementation 'androidx.cardview:cardview:1.0.0'
 
     // tab
-    // noinspection GradleCompatible
+    //noinspection GradleCompatible
 
-    // Scholarship Tab
+    // ScholarTab
     // noinspection GradleCompatible
     implementation 'com.android.support:design: 29.0.0'
 
@@ -93,6 +90,4 @@
     implementation 'com.kyleduo.switchbutton:library:2.0.0'
 
 
-}
-
-apply plugin: 'com.google.gms.google-services'
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision fec0d5f64da4630825e51deb4639c70361b54572)
+++ .idea/misc.xml	(date 1625208034642)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="JDK" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
